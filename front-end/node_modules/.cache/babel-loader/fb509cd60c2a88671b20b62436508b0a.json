{"ast":null,"code":"var _jsxFileName = \"/Users/daria/development/cooking-app/front-end/src/containers/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport SubmitButton from '../components/SubmitButton/SubmitButton';\nimport Navbar from \"../components/Navbar/Navbar\";\nimport api from '../apis/api';\nimport Recipe from '../components/Recipe/Recipe';\nimport Select from 'react-select';\nimport RecipePage from '../components/RecipePage/RecipePage';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      recipes: [],\n      recipesBool: false,\n      recipePageBool: false,\n      recipeID: null,\n      apiResponse: \"\" // callAPI() {\n      //   fetch(\"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/\")\n      //       .then(res => res.text())\n      //       .then(res => this.setState({ apiResponse: res }));\n      // }\n      // componentWillMount() {\n      //   this.callAPI();\n      // }\n\n    };\n\n    this.handleSubmit = async termFromSearchBar => {\n      const response = await api.get('/search', {\n        params: {\n          query: termFromSearchBar\n        }\n      });\n\n      if (response.data.results.length > 0) {\n        this.setState({\n          recipes: response.data.results,\n          recipesBool: true\n        });\n      } // else {\n      //    tell user stop doing stupid stuff \n      //    create card which will show user blah blah.. \n      // }\n\n    };\n\n    this.showRecipePage = () => {\n      this.setState({\n        recipesBool: false,\n        recipePageBool: true\n      });\n      console.log(\"working!\");\n    };\n  }\n\n  render() {\n    let displayedRecipes = null;\n    let recipes = this.state.recipes;\n    let displaySelectedRecipe = null;\n\n    handleRecipe = async recipeID => {\n      displaySelectedRecipe = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(RecipePage, {\n        recipeID: recipeID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }; // if(this.state.recipePageBool) {\n    //   displaySelectedRecipe = (\n    //       <div> \n    //           <RecipePage recipeID={this.state.recipeID} /> \n    //       </div>\n    //   ) \n    // }\n    // console.log(recipes)\n    //Testing new component: \n\n\n    const options = [{\n      value: 'chocolate',\n      label: 'Chocolate'\n    }, {\n      value: 'strawberry',\n      label: 'Strawberry'\n    }, {\n      value: 'vanilla',\n      label: 'Vanilla'\n    }];\n\n    const MyComponent = () => React.createElement(\"div\", {\n      className: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Select, {\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n\n    if (this.state.recipesBool) {\n      displayedRecipes = React.createElement(\"div\", {\n        className: \"tileHolder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, recipes.map(recipe => React.createElement(Recipe, {\n        displayRecipePage: this.showRecipePage,\n        key: recipe.title,\n        recipeName: recipe.title,\n        recipeID: recipe.id,\n        format: recipe.image.split(\".\")[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \" \")));\n    }\n\n    console.log(this.state.recipes);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(SearchBar, {\n      handleFormSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), displayedRecipes, MyComponent, displaySelectedRecipe);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/daria/development/cooking-app/front-end/src/containers/App.js"],"names":["React","Component","SearchBar","SubmitButton","Navbar","api","Recipe","Select","RecipePage","App","state","recipes","recipesBool","recipePageBool","recipeID","apiResponse","handleSubmit","termFromSearchBar","response","get","params","query","data","results","length","setState","showRecipePage","console","log","render","displayedRecipes","displaySelectedRecipe","handleRecipe","options","value","label","MyComponent","map","recipe","title","id","image","split"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport SearchBar from '../components/SearchBar/SearchBar'; \nimport SubmitButton from '../components/SubmitButton/SubmitButton'; \nimport Navbar from \"../components/Navbar/Navbar\";\nimport api from '../apis/api';\nimport Recipe from '../components/Recipe/Recipe'; \nimport Select from 'react-select'; \nimport RecipePage from '../components/RecipePage/RecipePage';\n\nclass App extends Component {\n  state = {\n    recipes: [],\n    recipesBool: false,\n    recipePageBool: false,\n    recipeID: null,\n    apiResponse: \"\" \n}\n\n// callAPI() {\n//   fetch(\"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/\")\n//       .then(res => res.text())\n//       .then(res => this.setState({ apiResponse: res }));\n// }\n\n// componentWillMount() {\n//   this.callAPI();\n// }\n\nhandleSubmit = async (termFromSearchBar) => {\n  const response = await api.get('/search', {\n      params: {\n          query: termFromSearchBar\n      }\n  })\n  if(response.data.results.length > 0) {\n    this.setState({\n      recipes : response.data.results,\n      recipesBool: true \n    }) \n    }\n    // else {\n    //    tell user stop doing stupid stuff \n    //    create card which will show user blah blah.. \n    // }\n};\nshowRecipePage = () => {\n  this.setState({\n    recipesBool: false,\n    recipePageBool:true \n  }) \n  console.log(\"working!\")\n}\n\n\n  render() {\n    let displayedRecipes = null;\n    let { recipes } = this.state; \n    let displaySelectedRecipe = null; \n\n    handleRecipe = async (recipeID) => {\n      displaySelectedRecipe = (\n        <div> \n            <RecipePage recipeID={recipeID} /> \n        </div>\n      )} \n\n    // if(this.state.recipePageBool) {\n    //   displaySelectedRecipe = (\n    //       <div> \n    //           <RecipePage recipeID={this.state.recipeID} /> \n    //       </div>\n    //   ) \n    // }\n    // console.log(recipes)\n\n    //Testing new component: \n\n    const options = [\n      { value: 'chocolate', label: 'Chocolate' },\n      { value: 'strawberry', label: 'Strawberry' },\n      { value: 'vanilla', label: 'Vanilla' }\n    ]\n    \n    const MyComponent = () => (\n      <div className=\"select\"> \n      <Select options={options} />\n      </div> \n    )\n\n\n    if(this.state.recipesBool) {\n      displayedRecipes = (\n        <div className=\"tileHolder\">\n          {\n            recipes.map( recipe => \n              <Recipe displayRecipePage={this.showRecipePage} key={recipe.title} recipeName={recipe.title} recipeID={recipe.id} format={recipe.image.split(\".\")[1]}> </Recipe>\n            )\n          }\n        </div>\n      )\n    }\n    console.log(this.state.recipes)\n \n\n    return (\n      <div className=\"App\">\n        <Navbar/>\n          <SearchBar handleFormSubmit={this.handleSubmit}/>\n          {displayedRecipes}\n\n        {MyComponent}\n        {displaySelectedRecipe}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}